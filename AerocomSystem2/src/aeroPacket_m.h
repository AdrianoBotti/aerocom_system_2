//
// Generated file, do not edit! Created by nedtool 5.4 from aeroPacket.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __AEROPACKET_M_H
#define __AEROPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>aeroPacket.msg:3</tt> by nedtool.
 * <pre>
 * message AeroPacket
 * {
 *     int sender; //id dell'AC xhe ha generato il pacchetto
 *     simtime_t generationTime; //istante in cui il messaggio e' stato creato
 *     simtime_t queueLeavingTime; // istante in cui il messaggio e' entrato in coda
 *     simtime_t ifaceLeavingTime; // istante in cui il messaggio e' ha lasciato l'interfaccia
 *     simtime_t controlTowerArrivalTime; 	//istante in cui il messaggio e' stato creato.
 *     									//uguale a ifaceLeavingTime, poiche' non ci sono ritardi di trasmissione
 *     int packetLength; //in byte 
 * }
 * </pre>
 */
class AeroPacket : public ::omnetpp::cMessage
{
  protected:
    int sender;
    ::omnetpp::simtime_t generationTime;
    ::omnetpp::simtime_t queueLeavingTime;
    ::omnetpp::simtime_t ifaceLeavingTime;
    ::omnetpp::simtime_t controlTowerArrivalTime;
    int packetLength;

  private:
    void copy(const AeroPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AeroPacket&);

  public:
    AeroPacket(const char *name=nullptr, short kind=0);
    AeroPacket(const AeroPacket& other);
    virtual ~AeroPacket();
    AeroPacket& operator=(const AeroPacket& other);
    virtual AeroPacket *dup() const override {return new AeroPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSender() const;
    virtual void setSender(int sender);
    virtual ::omnetpp::simtime_t getGenerationTime() const;
    virtual void setGenerationTime(::omnetpp::simtime_t generationTime);
    virtual ::omnetpp::simtime_t getQueueLeavingTime() const;
    virtual void setQueueLeavingTime(::omnetpp::simtime_t queueLeavingTime);
    virtual ::omnetpp::simtime_t getIfaceLeavingTime() const;
    virtual void setIfaceLeavingTime(::omnetpp::simtime_t ifaceLeavingTime);
    virtual ::omnetpp::simtime_t getControlTowerArrivalTime() const;
    virtual void setControlTowerArrivalTime(::omnetpp::simtime_t controlTowerArrivalTime);
    virtual int getPacketLength() const;
    virtual void setPacketLength(int packetLength);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AeroPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AeroPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __AEROPACKET_M_H

